# shuffled stratified split (indices referring to UCR database)
TESTINDEX=[ 3 14 31 48 37 42 24 33 15 55 59 28 16 49 45 52  6 23 26 54 41 36  5  1 53
 11 18 10 30 17]
TRAININDEX=[57  2 50 58  4  8 39 27  9 13 56 29 12 20 51  7 47 21  0 34 46 35 40 43 19
 25 44 32 38 22]

# learned parameters for cdtw and gem
# dtw ((error, size, error/size), (window, sqr))
# gem ((error, size, error/size), (St0, St1, E, sym, sqr))
BESTLEARNCONSDTW=((21, 30, 0.7), (0.01, True))
LISTLEARNCONSDTW=[((21, 30, 0.7), (0.0, True)), ((21, 30, 0.7), (0.01, True)), ((21, 30, 0.7), (0.02, True)), ((22, 30, 0.7333333333333333), (0.029999999999999999, True)), ((22, 30, 0.7333333333333333), (0.040000000000000001, True)), ((22, 30, 0.7333333333333333), (0.050000000000000003, True)), ((22, 30, 0.7333333333333333), (0.059999999999999998, True)), ((22, 30, 0.7333333333333333), (0.070000000000000007, True)), ((22, 30, 0.7333333333333333), (0.080000000000000002, True)), ((22, 30, 0.7333333333333333), (0.089999999999999997, True)), ((23, 30, 0.7666666666666667), (0.10000000000000001, True)), ((23, 30, 0.7666666666666667), (0.11, True)), ((24, 30, 0.8), (0.12, True)), ((24, 30, 0.8), (0.13, True)), ((24, 30, 0.8), (0.14000000000000001, True)), ((24, 30, 0.8), (0.14999999999999999, True)), ((24, 30, 0.8), (0.16, True)), ((24, 30, 0.8), (0.17000000000000001, True)), ((24, 30, 0.8), (0.17999999999999999, True)), ((24, 30, 0.8), (0.19, True)), ((24, 30, 0.8), (0.20000000000000001, True))]

BESTLEARNGEM=((18, 30, 0.6), (1, 2, 0.5, True, True))
LISTLEARNGEM=[((18, 30, 0.6), (1, 1, 0.5, True, True)), ((18, 30, 0.6), (1, 2, 0.5, True, True)), ((19, 30, 0.6333333333333333), (1, 1, 0.125, True, True)), ((19, 30, 0.6333333333333333), (1, 1, 0.25, True, True)), ((19, 30, 0.6333333333333333), (1, 2, 0.125, True, True)), ((19, 30, 0.6333333333333333), (1, 2, 0.25, True, True)), ((19, 30, 0.6333333333333333), (2, 1, 0.5, True, True)), ((19, 30, 0.6333333333333333), (2, 2, 0.5, True, True)), ((20, 30, 0.6666666666666666), (2, 1, 0.25, True, True)), ((20, 30, 0.6666666666666666), (2, 2, 0.25, True, True)), ((21, 30, 0.7), (1, 1, 0, True, True)), ((21, 30, 0.7), (1, 1, 0.03125, True, True)), ((21, 30, 0.7), (1, 1, 0.0625, True, True)), ((21, 30, 0.7), (1, 2, 0, True, True)), ((21, 30, 0.7), (1, 2, 0.03125, True, True)), ((21, 30, 0.7), (1, 2, 0.0625, True, True)), ((21, 30, 0.7), (2, 1, 0.125, True, True)), ((22, 30, 0.7333333333333333), (1, 1, 0.00390625, True, True)), ((22, 30, 0.7333333333333333), (1, 1, 0.0078125, True, True)), ((22, 30, 0.7333333333333333), (1, 1, 0.015625, True, True)), ((22, 30, 0.7333333333333333), (1, 2, 0.00390625, True, True)), ((22, 30, 0.7333333333333333), (1, 2, 0.0078125, True, True)), ((22, 30, 0.7333333333333333), (1, 2, 0.015625, True, True)), ((22, 30, 0.7333333333333333), (2, 1, 0, True, True)), ((22, 30, 0.7333333333333333), (2, 1, 0.00390625, True, True)), ((22, 30, 0.7333333333333333), (2, 2, 0.125, True, True)), ((23, 30, 0.7666666666666667), (2, 1, 0.0078125, True, True)), ((23, 30, 0.7666666666666667), (2, 1, 0.015625, True, True)), ((23, 30, 0.7666666666666667), (2, 1, 0.03125, True, True)), ((23, 30, 0.7666666666666667), (2, 1, 0.0625, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0.00390625, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0.0078125, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0.015625, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0.03125, True, True)), ((23, 30, 0.7666666666666667), (2, 2, 0.0625, True, True))]


# error rates for different distance measures
# (error, size, error/size) and binary mask
BESTLP=(15, 30, 0.5)
LISTLP=[0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]

BESTFULLDTW=(15, 30, 0.5)
LISTFULLDTW=[0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]

BESTCONSDTW=(15, 30, 0.5)
LISTCONSDTW=[0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0]

BESTGEM=(14, 30, 0.4666666666666667)
LISTGEM=[0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0]

